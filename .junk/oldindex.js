// import GenderSelector from "./gender";
import Head from 'next/head'
import Image from 'next/image'
import styles from '@/styles/Home.module.css'
import { Swiper, SwiperSlide } from 'swiper/react';
import SwiperCore, { Navigation, Pagination } from 'swiper';
import { getPhotos } from '../lib/unsplash';
import { useState, useEffect } from 'react';

SwiperCore.use([Navigation, Pagination]);

export default function Home() {
  const [photos, setPhotos] = useState([]);

  useEffect(() => {
    async function fetchPhotos() {
      const photos = await getPhotos('nike air jordan');
      setPhotos(photos);
    }
    fetchPhotos();
  }, []);

  return (
    <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
      <Swiper
        spaceBetween={10}
        slidesPerView={3}
        navigation
        pagination={{ clickable: true }}
      >
        {photos.map(photo => (
          <SwiperSlide key={photo.id}>
            <Image
              src={photo.urls.regular}
              alt={photo.alt_description}
              width={photo.width}
              height={photo.height}
            />
          </SwiperSlide>
        ))}
      </Swiper>
    </div>
  );
}

// export default 
function OldHome() {
  const [content, setContent] = useState([]);
  const show = (x) => { setContent(content => [...content, x]); };
  const capitalize = (s) => { return s[0].toUpperCase() + s.slice(1); };

  async function generate(args) {
    try {
      const response = await fetch("/api/generate", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(args),
      });

      const data = await response.json();
      if (response.status !== 200) {
        throw data.error || new Error(`Request failed with status ${response.status}`);
      }
      console.log(data.result);
      return data.result.split(/[\n,]/).
        filter(x => x).
	map(x => capitalize(x.replace(/^ /,'').replace(/\.$/,'')));
    } catch(error) {
      // Consider implementing your own error handling logic here
      console.error(error);
      alert(error.message);
      return [];
    }
  }

  async function activity() {
    const activities = await generate({ q: 'activity' });
    show(<div>What kind of shoe are you looking for?</div>);
    show(<div><ul> { activities.map((item, index) => (<li key={item}>{item}</li>)) } </ul></div>);
  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
	<div className="text-4xl">Let's ...</div>
	<button className="bg-black rounded-xl text-white font-medium px-4 py-2 sm:mt-10 mt-8 hover:bg-black/70"
	onClick={activity}>buy shoes!</button>
	{content}
      </main>
    </>
  )
}
